{
  "uid" : "4dbd68c165bdb414",
  "name" : "test_task_gainTaskReward[caseinfo0]",
  "fullName" : "testcases.test_requests.TestRequests#test_task_gainTaskReward",
  "historyId" : "d1dc9052c301a018397d33af2aac201d",
  "time" : {
    "start" : 1629942352537,
    "stop" : 1629942352557,
    "duration" : 20
  },
  "status" : "broken",
  "statusMessage" : "Exception: 断言异常：异常信息Traceback (most recent call last):\n  File \"E:\\code\\Finder_api_test_framework\\common\\requests_util.py\", line 139, in validate_result\n    for i in get_json_data(actual_results, 'asset'):\nTypeError: 'bool' object is not iterable",
  "statusTrace" : "self = <common.requests_util.RequestsUtil object at 0x000001F2DC690970>\nexpected_results = [{'equals': {'retCode': 200}}, {'equals': {'resourceList': {'2001002': 50}}}, {'equals': {'asset': {2001001: '${get_asset(+,${get_login_data(2001002)},50)}'}}}]\nactual_results = [{'cv': '0f6034844107f1f87eb03bfe8f202378_20651', 'errCode': 0, 'st': 0, 'ts': 1629942371}, [{'method': 'task_gainTaskReward', 'retCode': 681081}], []]\n\n    def validate_result(self, expected_results, actual_results):\n        \"\"\"\n          断言\n          :param expected_results:预期结果集 list，\n          :param actual_results: 实际结果集，执行接口返回数据 json or list\n          :return:\n          \"\"\"\n        try:\n            # 解析数据\n            # 断言是否成功标记，0成功，其他失败\n            flag = 0\n            if expected_results and isinstance(expected_results, list):\n                for expected in expected_results:\n                    for key, value in dict(expected).items():\n                        # 断言方式\n                        if key == \"equals\":\n                            for assert_key, assert_value in dict(value).items():\n                                if assert_key == 'retCode':\n                                    if get_json_data(actual_results, 'retCode')[0] != assert_value:\n                                        flag = flag + 1\n                                        write_log(\"断言失败：{0}不等于{1}\".format(assert_key, assert_value))\n                                elif assert_key == 'asset':\n                                    write_log( \"获取asset的值:{0}\".format(get_json_data(actual_results, 'asset')))\n>                                   for i in get_json_data(actual_results, 'asset'):\nE                                   TypeError: 'bool' object is not iterable\n\ncommon\\requests_util.py:139: TypeError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <testcases.test_requests.TestRequests object at 0x000001F2DC698CA0>\ncaseinfo = {'method': 'task_gainTaskReward', 'name': '领取任务奖励', 'params': {'taskId': 5902009}, 'validate': [{'equals': {'retCode':...{'resourceList': {'2001002': 50}}}, {'equals': {'asset': {2001001: '${get_asset(+,${get_login_data(2001002)},50)}'}}}]}\n\n    @allure.story(\"任务领取\")\n    @pytest.mark.parametrize('caseinfo',read_testcase_file(r'\\testcases\\task_gainTaskReward.yml'))\n    def test_task_gainTaskReward(self,caseinfo):\n>       RequestsUtil().analysis_yaml(caseinfo)\n\ntestcases\\test_requests.py:17: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommon\\requests_util.py:98: in analysis_yaml\n    self.validate_result(expected_results, actual_results)\ncommon\\requests_util.py:167: in validate_result\n    error_log(\"断言异常：异常信息%s\" % str(traceback.format_exc()))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nlog_message = '断言异常：异常信息Traceback (most recent call last):\\n  File \"E:\\\\code\\\\Finder_api_test_framework\\\\common\\\\requests_util.py\", ... validate_result\\n    for i in get_json_data(actual_results, \\'asset\\'):\\nTypeError: \\'bool\\' object is not iterable\\n'\n\n    def error_log(log_message):\n        LoggerUtil().create_log(log_message)\n>       raise Exception(log_message)\nE       Exception: 断言异常：异常信息Traceback (most recent call last):\nE         File \"E:\\code\\Finder_api_test_framework\\common\\requests_util.py\", line 139, in validate_result\nE           for i in get_json_data(actual_results, 'asset'):\nE       TypeError: 'bool' object is not iterable\n\ncommon\\logger_util.py:66: Exception",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "game_login",
    "time" : {
      "start" : 1629942352467,
      "stop" : 1629942352537,
      "duration" : 70
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "log",
    "time" : {
      "start" : 1629942352316,
      "stop" : 1629942352316,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "Exception: 断言异常：异常信息Traceback (most recent call last):\n  File \"E:\\code\\Finder_api_test_framework\\common\\requests_util.py\", line 139, in validate_result\n    for i in get_json_data(actual_results, 'asset'):\nTypeError: 'bool' object is not iterable",
    "statusTrace" : "self = <common.requests_util.RequestsUtil object at 0x000001F2DC690970>\nexpected_results = [{'equals': {'retCode': 200}}, {'equals': {'resourceList': {'2001002': 50}}}, {'equals': {'asset': {2001001: '${get_asset(+,${get_login_data(2001002)},50)}'}}}]\nactual_results = [{'cv': '0f6034844107f1f87eb03bfe8f202378_20651', 'errCode': 0, 'st': 0, 'ts': 1629942371}, [{'method': 'task_gainTaskReward', 'retCode': 681081}], []]\n\n    def validate_result(self, expected_results, actual_results):\n        \"\"\"\n          断言\n          :param expected_results:预期结果集 list，\n          :param actual_results: 实际结果集，执行接口返回数据 json or list\n          :return:\n          \"\"\"\n        try:\n            # 解析数据\n            # 断言是否成功标记，0成功，其他失败\n            flag = 0\n            if expected_results and isinstance(expected_results, list):\n                for expected in expected_results:\n                    for key, value in dict(expected).items():\n                        # 断言方式\n                        if key == \"equals\":\n                            for assert_key, assert_value in dict(value).items():\n                                if assert_key == 'retCode':\n                                    if get_json_data(actual_results, 'retCode')[0] != assert_value:\n                                        flag = flag + 1\n                                        write_log(\"断言失败：{0}不等于{1}\".format(assert_key, assert_value))\n                                elif assert_key == 'asset':\n                                    write_log( \"获取asset的值:{0}\".format(get_json_data(actual_results, 'asset')))\n>                                   for i in get_json_data(actual_results, 'asset'):\nE                                   TypeError: 'bool' object is not iterable\n\ncommon\\requests_util.py:139: TypeError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <testcases.test_requests.TestRequests object at 0x000001F2DC698CA0>\ncaseinfo = {'method': 'task_gainTaskReward', 'name': '领取任务奖励', 'params': {'taskId': 5902009}, 'validate': [{'equals': {'retCode':...{'resourceList': {'2001002': 50}}}, {'equals': {'asset': {2001001: '${get_asset(+,${get_login_data(2001002)},50)}'}}}]}\n\n    @allure.story(\"任务领取\")\n    @pytest.mark.parametrize('caseinfo',read_testcase_file(r'\\testcases\\task_gainTaskReward.yml'))\n    def test_task_gainTaskReward(self,caseinfo):\n>       RequestsUtil().analysis_yaml(caseinfo)\n\ntestcases\\test_requests.py:17: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommon\\requests_util.py:98: in analysis_yaml\n    self.validate_result(expected_results, actual_results)\ncommon\\requests_util.py:167: in validate_result\n    error_log(\"断言异常：异常信息%s\" % str(traceback.format_exc()))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nlog_message = '断言异常：异常信息Traceback (most recent call last):\\n  File \"E:\\\\code\\\\Finder_api_test_framework\\\\common\\\\requests_util.py\", ... validate_result\\n    for i in get_json_data(actual_results, \\'asset\\'):\\nTypeError: \\'bool\\' object is not iterable\\n'\n\n    def error_log(log_message):\n        LoggerUtil().create_log(log_message)\n>       raise Exception(log_message)\nE       Exception: 断言异常：异常信息Traceback (most recent call last):\nE         File \"E:\\code\\Finder_api_test_framework\\common\\requests_util.py\", line 139, in validate_result\nE           for i in get_json_data(actual_results, 'asset'):\nE       TypeError: 'bool' object is not iterable\n\ncommon\\logger_util.py:66: Exception",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "95afbe7c6129402e",
      "name" : "log",
      "source" : "95afbe7c6129402e.txt",
      "type" : "text/plain",
      "size" : 1040
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true,
    "stepsCount" : 0
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "story",
    "value" : "任务领取"
  }, {
    "name" : "feature",
    "value" : "僚机&任务"
  }, {
    "name" : "epic",
    "value" : "findler,apiauto"
  }, {
    "name" : "parentSuite",
    "value" : "testcases"
  }, {
    "name" : "suite",
    "value" : "test_requests"
  }, {
    "name" : "subSuite",
    "value" : "TestRequests"
  }, {
    "name" : "host",
    "value" : "DESKTOP-GRF30Q9"
  }, {
    "name" : "thread",
    "value" : "40704-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testcases.test_requests"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "caseinfo",
    "value" : "{'name': '领取任务奖励', 'method': 'task_gainTaskReward', 'params': {'taskId': 5902009}, 'validate': [{'equals': {'retCode': 200}}, {'equals': {'resourceList': {'2001002': 50}}}, {'equals': {'asset': {2001001: '${get_asset(+,${get_login_data(2001002)},50)}'}}}]}"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "4dbd68c165bdb414.json",
  "parameterValues" : [ "{'name': '领取任务奖励', 'method': 'task_gainTaskReward', 'params': {'taskId': 5902009}, 'validate': [{'equals': {'retCode': 200}}, {'equals': {'resourceList': {'2001002': 50}}}, {'equals': {'asset': {2001001: '${get_asset(+,${get_login_data(2001002)},50)}'}}}]}" ]
}